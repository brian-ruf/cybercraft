name: Build and Release

on:
  push:
    tags:
      - 'v*' # Trigger only on tags that start with "v"
  pull_request:
    branches:
      - main

jobs:
  build-windows:
    name: Build Windows Executable
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m venv venv
          .\venv\Scripts\activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
        working-directory: src

      - name: Compile Windows Executable
        run: |
          .\compile.bat
        working-directory: src

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/v') # Only run on tag pushes
        with:
          tag_name: ${{ github.ref_name }} # Automatically use the current tag
          release_name: CyberCraft ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Executable
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/v') # Only run on tag pushes
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src\dist\CyberCraft.exe
          asset_name: CyberCraft.exe
          asset_content_type: application/octet-stream

  build-macos:
    name: Build macOS Executable
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
        working-directory: src

      - name: Compile macOS Executable
        run: |
          chmod +x *.sh resource/*.sh
          ./compile.sh
        working-directory: src

      - name: Upload macOS Executable
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/v') # Only run on tag pushes
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src/dist/CyberCraft
          asset_name: CyberCraft
          asset_content_type: application/octet-stream
